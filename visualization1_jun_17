{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "e4c4a28b",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "81d7e5d5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<bound method NDFrame.head of    sales\n",
       "0      8\n",
       "1     10\n",
       "2      1\n",
       "3     96\n",
       "4     56>"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df=pd.DataFrame(np.random.randint(0,100,5),columns=['sales'])\n",
    "df.head"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "d76ddb54",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sales</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>56</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   sales\n",
       "0      8\n",
       "1     10\n",
       "2      1\n",
       "3     96\n",
       "4     56"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "f2b38df4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting matplotlib\n",
      "  Downloading matplotlib-3.10.3-cp313-cp313-win_amd64.whl.metadata (11 kB)\n",
      "Collecting contourpy>=1.0.1 (from matplotlib)\n",
      "  Downloading contourpy-1.3.2-cp313-cp313-win_amd64.whl.metadata (5.5 kB)\n",
      "Collecting cycler>=0.10 (from matplotlib)\n",
      "  Downloading cycler-0.12.1-py3-none-any.whl.metadata (3.8 kB)\n",
      "Collecting fonttools>=4.22.0 (from matplotlib)\n",
      "  Downloading fonttools-4.58.4-cp313-cp313-win_amd64.whl.metadata (108 kB)\n",
      "Collecting kiwisolver>=1.3.1 (from matplotlib)\n",
      "  Downloading kiwisolver-1.4.8-cp313-cp313-win_amd64.whl.metadata (6.3 kB)\n",
      "Requirement already satisfied: numpy>=1.23 in c:\\downloads\\data science\\.venv\\lib\\site-packages (from matplotlib) (2.3.0)\n",
      "Requirement already satisfied: packaging>=20.0 in c:\\downloads\\data science\\.venv\\lib\\site-packages (from matplotlib) (25.0)\n",
      "Collecting pillow>=8 (from matplotlib)\n",
      "  Downloading pillow-11.2.1-cp313-cp313-win_amd64.whl.metadata (9.1 kB)\n",
      "Collecting pyparsing>=2.3.1 (from matplotlib)\n",
      "  Downloading pyparsing-3.2.3-py3-none-any.whl.metadata (5.0 kB)\n",
      "Requirement already satisfied: python-dateutil>=2.7 in c:\\downloads\\data science\\.venv\\lib\\site-packages (from matplotlib) (2.9.0.post0)\n",
      "Requirement already satisfied: six>=1.5 in c:\\downloads\\data science\\.venv\\lib\\site-packages (from python-dateutil>=2.7->matplotlib) (1.17.0)\n",
      "Downloading matplotlib-3.10.3-cp313-cp313-win_amd64.whl (8.1 MB)\n",
      "   ---------------------------------------- 0.0/8.1 MB ? eta -:--:--\n",
      "   ----------------------- ---------------- 4.7/8.1 MB 24.1 MB/s eta 0:00:01\n",
      "   ---------------------------------------- 8.1/8.1 MB 22.3 MB/s eta 0:00:00\n",
      "Downloading contourpy-1.3.2-cp313-cp313-win_amd64.whl (223 kB)\n",
      "Downloading cycler-0.12.1-py3-none-any.whl (8.3 kB)\n",
      "Downloading fonttools-4.58.4-cp313-cp313-win_amd64.whl (2.2 MB)\n",
      "   ---------------------------------------- 0.0/2.2 MB ? eta -:--:--\n",
      "   ---------------------------------------- 2.2/2.2 MB 23.3 MB/s eta 0:00:00\n",
      "Downloading kiwisolver-1.4.8-cp313-cp313-win_amd64.whl (71 kB)\n",
      "Downloading pillow-11.2.1-cp313-cp313-win_amd64.whl (2.7 MB)\n",
      "   ---------------------------------------- 0.0/2.7 MB ? eta -:--:--\n",
      "   ---------------------------------------- 2.7/2.7 MB 29.0 MB/s eta 0:00:00\n",
      "Downloading pyparsing-3.2.3-py3-none-any.whl (111 kB)\n",
      "Installing collected packages: pyparsing, pillow, kiwisolver, fonttools, cycler, contourpy, matplotlib\n",
      "\n",
      "   ---------------------------------------- 0/7 [pyparsing]\n",
      "   ----- ---------------------------------- 1/7 [pillow]\n",
      "   ----- ---------------------------------- 1/7 [pillow]\n",
      "   ----- ---------------------------------- 1/7 [pillow]\n",
      "   ----- ---------------------------------- 1/7 [pillow]\n",
      "   ----- ---------------------------------- 1/7 [pillow]\n",
      "   ----- ---------------------------------- 1/7 [pillow]\n",
      "   ----- ---------------------------------- 1/7 [pillow]\n",
      "   ----- ---------------------------------- 1/7 [pillow]\n",
      "   ----------- ---------------------------- 2/7 [kiwisolver]\n",
      "   ----------------- ---------------------- 3/7 [fonttools]\n",
      "   ----------------- ---------------------- 3/7 [fonttools]\n",
      "   ----------------- ---------------------- 3/7 [fonttools]\n",
      "   ----------------- ---------------------- 3/7 [fonttools]\n",
      "   ----------------- ---------------------- 3/7 [fonttools]\n",
      "   ----------------- ---------------------- 3/7 [fonttools]\n",
      "   ----------------- ---------------------- 3/7 [fonttools]\n",
      "   ----------------- ---------------------- 3/7 [fonttools]\n",
      "   ----------------- ---------------------- 3/7 [fonttools]\n",
      "   ----------------- ---------------------- 3/7 [fonttools]\n",
      "   ----------------- ---------------------- 3/7 [fonttools]\n",
      "   ----------------- ---------------------- 3/7 [fonttools]\n",
      "   ----------------- ---------------------- 3/7 [fonttools]\n",
      "   ----------------- ---------------------- 3/7 [fonttools]\n",
      "   ----------------- ---------------------- 3/7 [fonttools]\n",
      "   ----------------- ---------------------- 3/7 [fonttools]\n",
      "   ----------------- ---------------------- 3/7 [fonttools]\n",
      "   ----------------- ---------------------- 3/7 [fonttools]\n",
      "   ----------------- ---------------------- 3/7 [fonttools]\n",
      "   ----------------- ---------------------- 3/7 [fonttools]\n",
      "   ----------------- ---------------------- 3/7 [fonttools]\n",
      "   ----------------- ---------------------- 3/7 [fonttools]\n",
      "   ----------------- ---------------------- 3/7 [fonttools]\n",
      "   ----------------- ---------------------- 3/7 [fonttools]\n",
      "   ----------------- ---------------------- 3/7 [fonttools]\n",
      "   ----------------- ---------------------- 3/7 [fonttools]\n",
      "   ----------------- ---------------------- 3/7 [fonttools]\n",
      "   ----------------- ---------------------- 3/7 [fonttools]\n",
      "   ---------------------------- ----------- 5/7 [contourpy]\n",
      "   ---------------------------- ----------- 5/7 [contourpy]\n",
      "   ---------------------------------- ----- 6/7 [matplotlib]\n",
      "   ---------------------------------- ----- 6/7 [matplotlib]\n",
      "   ---------------------------------- ----- 6/7 [matplotlib]\n",
      "   ---------------------------------- ----- 6/7 [matplotlib]\n",
      "   ---------------------------------- ----- 6/7 [matplotlib]\n",
      "   ---------------------------------- ----- 6/7 [matplotlib]\n",
      "   ---------------------------------- ----- 6/7 [matplotlib]\n",
      "   ---------------------------------- ----- 6/7 [matplotlib]\n",
      "   ---------------------------------- ----- 6/7 [matplotlib]\n",
      "   ---------------------------------- ----- 6/7 [matplotlib]\n",
      "   ---------------------------------- ----- 6/7 [matplotlib]\n",
      "   ---------------------------------- ----- 6/7 [matplotlib]\n",
      "   ---------------------------------- ----- 6/7 [matplotlib]\n",
      "   ---------------------------------- ----- 6/7 [matplotlib]\n",
      "   ---------------------------------- ----- 6/7 [matplotlib]\n",
      "   ---------------------------------- ----- 6/7 [matplotlib]\n",
      "   ---------------------------------- ----- 6/7 [matplotlib]\n",
      "   ---------------------------------- ----- 6/7 [matplotlib]\n",
      "   ---------------------------------- ----- 6/7 [matplotlib]\n",
      "   ---------------------------------- ----- 6/7 [matplotlib]\n",
      "   ---------------------------------- ----- 6/7 [matplotlib]\n",
      "   ---------------------------------- ----- 6/7 [matplotlib]\n",
      "   ---------------------------------- ----- 6/7 [matplotlib]\n",
      "   ---------------------------------- ----- 6/7 [matplotlib]\n",
      "   ---------------------------------- ----- 6/7 [matplotlib]\n",
      "   ---------------------------------- ----- 6/7 [matplotlib]\n",
      "   ---------------------------------- ----- 6/7 [matplotlib]\n",
      "   ---------------------------------- ----- 6/7 [matplotlib]\n",
      "   ---------------------------------- ----- 6/7 [matplotlib]\n",
      "   ---------------------------------- ----- 6/7 [matplotlib]\n",
      "   ---------------------------------- ----- 6/7 [matplotlib]\n",
      "   ---------------------------------------- 7/7 [matplotlib]\n",
      "\n",
      "Successfully installed contourpy-1.3.2 cycler-0.12.1 fonttools-4.58.4 kiwisolver-1.4.8 matplotlib-3.10.3 pillow-11.2.1 pyparsing-3.2.3\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install matplotlib"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "9e2b7f12",
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "8c2afde2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 2000x400 with 0 Axes>"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 2000x400 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(20,4))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "83ec4c7a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'Index')"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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IVwAgGwIFwAgG8IFAMiGcAEAsiFcAIBsCBcAIBvCBQDIhnABALIhXACAbAgXACAbwgUAyIZwAQCyIVwAgGwIFwAgG8IFAMiGcAEAsiFcAIBsCBcAIBvCBQDIhnABALIhXACAbAgXACAbwgUAyIZwAQCyIVwAgGwIFwAgG8IFAMiGcAEAsiFcAIBsCBcAIBvCBQDIhnABALIhXACAbAgXACAbwgUAyIZwAQCyIVwAgGwIFwAgG8IFAMiGcAEAsiFcAIBsCBcAIBvCBQDIhnABALIhXACAbAgXACAbwgUAaNzhMmnSpOjevXu0adMm+vbtG/Pnz//K5T/88MM4//zzY88994zWrVvHfvvtF7NmzartNgMATVTLcleYPn16jBgxIiZPnlxEy8SJE6OioiJee+216NChw5eWX79+ffzwhz8svnb//fdHly5d4p133oldd911W30PAEAT0axUKpXKWSHFyhFHHBE333xzMb1x48bo2rVrXHDBBTFq1KgvLZ8C53e/+10sWrQodthhh1pt5Jo1a6Jdu3axevXqaNu2ba2eAwCoX3Xx/l3WqaJ09GTBggXRv3///z5B8+bF9Lx582pc56GHHop+/foVp4o6duwYBx98cFx77bWxYcOGLb7OunXrim920wcAQFnhsmrVqiI4UoBsKk0vW7asxnUWL15cnCJK66XrWi677LK48cYb4+qrr97i64wfP74otMpHOqIDAFDno4rSqaR0fcttt90WvXr1isGDB8eYMWOKU0hbMnr06OKwUuVj6dKldb2ZAEBjuzi3ffv20aJFi1i+fHm1+Wm6U6dONa6TRhKla1vSepUOPPDA4ghNOvXUqlWrL62TRh6lBwBArY+4pMhIR03mzJlT7YhKmk7XsdTkqKOOijfeeKNYrtLrr79eBE1N0QIAsM1OFaWh0FOmTIm77rorXn311fjlL38Za9eujWHDhhVfHzJkSHGqp1L6+gcffBAXXnhhESwzZ84sLs5NF+sCANTpfVzSNSorV66MsWPHFqd7evbsGbNnz666YHfJkiXFSKNK6cLaRx55JIYPHx6HHnpocR+XFDEjR44s96UBgCau7Pu4NAT3cQGA/DT4fVwAABqScAEAsiFcAIBsCBcAIBvCBQDIhnABALIhXACAbAgXACAbwgUAyIZwAQCyIVwAgGwIFwAgG8IFAMiGcAEAsiFc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/fbbz++pBtoX6bYd+++/f+y4447FHXWHDx8en332Wb1tb2P15JNPxsCBA6Nz587F75uv+gzCSnPnzo3DDz+8+JnYd99948477yz/hUvbgWnTppVatWpVmjp1aunll18unX322aVdd921tHz58hqXf/rpp0stWrQoXX/99aVXXnmldOmll5Z22GGH0osvvljv297YlLsvTj311NKkSZNKzz//fOnVV18tnXHGGaV27dqV3n333Xrf9qa+Lyq99dZbpS5dupSOPvro0kknnVRv29uYlbsv1q1bV+rdu3fphBNOKD311FPFPpk7d27phRdeqPdtb+r74u677y61bt26+DPth0ceeaS05557loYPH17v297YzJo1qzRmzJjSAw88kEYnl2bMmPGVyy9evLi00047lUaMGFG8d//+978v3stnz55d1utuF+HSp0+f0vnnn181vWHDhlLnzp1L48ePr3H5k08+uTRgwIBq8/r27Vv6xS9+Uefb2tiVuy8298UXX5R22WWX0l133VWHW9k01GZfpH//Rx55ZOn2228vDR06VLg00L649dZbS3vvvXdp/fr19biVTUO5+yIte9xxx1Wbl944jzrqqDrf1qYktiJcLr744tJ3v/vdavMGDx5cqqioKOu1GvxU0fr162PBggXFKYZK6QZ2aXrevHk1rpPmb7p8UlFRscXlqbt9sblPPvkkPv/88236gVpNUW33xZVXXhkdOnSIM888s562tPGrzb546KGHio81SaeK0s050w03r7322tiwYUM9bnnjU5t9kW6CmtapPJ20ePHi4pTdCSecUG/bzbZ9727wT4detWpV8cNceefdSml60aJFNa6T7thb0/JpPvW7LzY3cuTI4nzn5v9xUvf74qmnnoo77rgjXnjhhXrayqahNvsivTn+7W9/i9NOO614k3zjjTfivPPOK6I+3UWU+tsXp556arHe97///XSGIb744os499xzizu5U7+29N6dPs37008/La5B2hoNfsSFxmPChAnFRaEzZswoLpqj/nz00Udx+umnFxdLp09xp2GlD59NR77SZ7KlD6ZNH5UyZsyYmDx5ckNvWpOTLgZNR7tuueWWWLhwYTzwwAMxc+bMuOqqqxp606ilBj/ikn7JtmjRIpYvX15tfpru1KlTjeuk+eUsT93ti0o33HBDES6PP/54HHrooXW8pY1fufvizTffjLfffru4wn/TN8+kZcuW8dprr8U+++xTD1ve+NTm5yKNJNphhx2K9SodeOCBxf9xptMdrVq1qvPtboxqsy8uu+yyIurPOuusYjqNQk0fDHzOOecUMbnpZ+tRt7b03t22bdutPtqSNPgeSz/A6f9I5syZU+0XbppO54hrkuZvunzy2GOPbXF56m5fJNdff33xfy/pwzbTp4ZT//si3RrgxRdfLE4TVT5OPPHEOPbYY4u/pyGg1N/PxVFHHVWcHqqMx+T1118vgka01O++SNfdbR4nlUHpo/rq1zZ77y5tJ8Pb0nC1O++8sxgidc455xTD25YtW1Z8/fTTTy+NGjWq2nDoli1blm644YZiCO64ceMMh26gfTFhwoRiaOL9999fev/996seH330UQN+F01zX2zOqKKG2xdLliwpRtf96le/Kr322mulhx9+uNShQ4fS1Vdf3YDfRdPcF+n9Ie2Lv/zlL8Vw3EcffbS0zz77FKNT+XrS7/l0K4z0SDlx0003FX9/5513iq+n/ZD2x+bDoX/7298W793pVhrZDodO0njubt26FW+Cabjbs88+W/W1Y445pvglvKl77723tN9++xXLp+FVM2fObICtbpzK2Rd77bVX8R/s5o/0y4L6/7nYlHBp2H3xzDPPFLdpSG+yaWj0NddcUwxXp373xeeff166/PLLi1hp06ZNqWvXrqXzzjuv9J///KeBtr7xeOKJJ2r8/V/57z/9mfbH5uv07Nmz2Hfp5+IPf/hD2a/bLP1j2x4MAgCoGw1+jQsAwNYSLgBANoQLAJAN4QIAZEO4AADZEC4AQDaECwCQDeECNKhmzZrFgw8+2NCbAWRCuAC1dsYZZ8SgQYMaejOAJkS4AADZEC7ANvGDH/wgfv3rX8fFF18cu+++e/ER9pdffnm1Zf71r3/F//3f/0WbNm3ioIMOKj4ZdnNLly6Nk08+OXbdddfieU466aR4++23i68tWrQodtppp7jnnnuqlr/33ntjxx13jFdeeaUevkugoQkXYJu566674hvf+Eb84x//iOuvvz6uvPLKqjjZuHFj/PSnP41WrVoVX588eXKMHDmy2vqff/55VFRUxC677BJ///vf4+mnn46dd945fvSjH8X69evjgAMOiBtuuCHOO++8WLJkSbz77rtx7rnnxnXXXVeEEND4+ZBF4Gtd4/Lhhx8WF9emIy4bNmwogqNSnz594rjjjosJEybEo48+GgMGDIh33nknOnfuXHx99uzZ8eMf/zhmzJhRXCvz5z//Oa6++up49dVXi4t2kxQs6ehLeo3jjz++mPeTn/wk1qxZU0RQixYtiuepXB5o3Fo29AYAjcehhx5abXrPPfeMFStWFH9PMdK1a9eqaEn69etXbfl//vOf8cYbbxRHXDb12WefxZtvvlk1PXXq1Nhvv/2iefPm8fLLL4sWaEKEC7DN7LDDDtWmU1CkU0Rb6+OPP45evXrF3Xff/aWv7bHHHtUCZ+3atUW4vP/++0UgAU2DcAHqxYEHHlhceLtpaDz77LPVljn88MNj+vTp0aFDh2jbtm2Nz/PBBx8Up6jGjBlTPNdpp50WCxcuLC7QBRo/F+cC9aJ///7F6Z2hQ4cWR0zStTApPjaVIqR9+/bFSKL09bfeeivmzp1bjFZKF+Im6WLcdMrp0ksvjZtuuqm4ruaiiy5qoO8KqG/CBagX6bROugj3008/LS7aPeuss+Kaa66ptkwa6vzkk09Gt27dihFI6SjNmWeeWVzjko7A/PGPf4xZs2bFn/70p2jZsmUxgild0DtlypT461//2mDfG1B/jCoCALLhiAsAkA3hAgBkQ7gAANkQLgBANoQLAJAN4QIAZEO4AADZEC4AQDaECwCQDeECAGRDuAAA2RAuAEDk4v8B04aw9cN2/n8AAAAASUVORK5CYII=",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.xlabel('Index')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "120bb50d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'sales')"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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BABkSxACALIlCAEA2RKEAIBsCUIAQLYEIQAgW4IQAJCtXQpCq1evjr///e+N+0uWLIlvf/vbcccdd7Rk3QAAKi8InXnmmfHEE08Ur2tra+Nzn/tcEYamTJkSV155ZUvXEQCgcoLQ888/H0OGDCle33fffdG/f/9YtGhR/OIXv4h77723pesIAFA5Qei9996LLl26FK8ff/zxOO2004rX/fr1izfeeKNlawgAUElB6IgjjohZs2bF73//+3jsscfi85//fFH+j3/8Iz760Y+2dB0BAConCF133XVx++23x4knnhhnnHFGDBgwoCh/+OGHG4fMAAAqXVWpVCrtyombN2+Ourq62HfffRvLXn311dhrr72iR48eUalSnbt16xbr16+P6urqclcHACjj9XuX7yOU8tPSpUuLnqENGzYUZZ07dy6CEABAW9BpV0567bXXinlBq1ativr6+mL5/N57710MmaX9NH8IAKDS7VKP0MUXXxyDBw+Of//737Hnnns2ln/hC1+IBQsWtGT9AAAqq0corRZL9w1KQ2Fb69u3b7z++ustVTcAgMrrEdqyZUsxWXpb6bEbaYgMAKDdBqGTTz45ZsyY0bhfVVUV//nPf2LatGlxyimntGT9AAAqa/l86vmpqakpVo797W9/K+YLpY/du3ePJ5980vJ5AKBNXL93+T5C77//fsyePTv+9Kc/Fb1BxxxzTJx11llNJk9XIkEIANqeut10/e60yyd26hRf/epXW6wiAACtbYeDUHp8xo5qeAgrAEC7CEKjRo3aoePSxOnmVpQBALTZIJSWzAMAtCe7/KwxAIC2bpcnS2/cuDF+97vfFc8b27RpU5PPfetb32qJugEAVF4QevbZZ4sbJ7799ttFINpvv/1i3bp1xZPn0z2EBCEAoN0OjU2YMCFGjhzZ+NDVp59+ungi/aBBg+LGG29s+VoCAFRKEFq+fHl85zvfiQ4dOkTHjh2jvr4++vTpE9dff31ceumlLV9LAIBKCUJ77LFHEYKSNBSW5gkl6Y6Pq1evbtkaAgBU0hyho48+Ov74xz/GJz7xiTjhhBNi6tSpxRyhn//859G/f/+WryUAQKX0CF1zzTWx//77F6+vvvrq2HfffeOCCy4owtDtt9/e0nUEAKicHqEjjjiiePJ8w9DYrFmz4sEHH4zDDz88Bg4c2NJ1BAConB6h008/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bmfa4s4774zhw4fHvvvuW2zpmXP/re3Yvb8bDdJtKqqqqmLUqFG7vY652Nm2SI8HuvDCC2P//fcvlg8fdthh/laVqS3SbV4++clPxp577lk8fmPChAnx7rvvtlp926snn3wyRo4cGQcccEDx92Z7zxDd2sKFC+OYY44pficOPfTQJivMd1ipnZk9e3apc+fOpXvuuaf05z//uXTuueeW9tlnn9KaNWuaPf4Pf/hDqWPHjqXrr7++9Je//KV02WWXlfbYY4/Sc8891+p1z70tzjzzzNLMmTNLzz77bOmFF14ofe1rXyt169at9Pe//73V694e7Wx7NHjllVdKvXv3Lg0fPrx0+umnt1p927OdbYv6+vrS4MGDS6ecckrpqaeeKtpk4cKFpeXLl7d63XNvi1/84helLl26FB9TOzzyyCOl/fffvzRhwoRWr3t7M2/evNKUKVNKDzzwQFrNXnrwwQc/9PiVK1eW9tprr9LEiROL6/ePf/zj4no+f/78nXrfdheEhgwZUrrwwgsb9zdv3lw64IADStOnT2/2+C9/+culU089tUnZ0KFDS1//+td3e13bu51ti229//77pb333rv005/+dDfWMh+70h6pDY477rjSXXfdVRo3bpwgVKa2uO2220oHH3xwadOmTa1YyzzsbFukYz/72c82KUsX4uOPP3631zUnsQNB6Pvf/37piCOOaFI2evToUk1NzU69V7saGtu0aVMsXbq0GFLZ+uFsaX/x4sXNnpPKtz4+qamp2e7x7L622Nbbb78d7733Xos/aThHu9oeV155ZfTo0SPOPvvsVqpp+7crbfHwww8XjxFKQ2M9e/aM/v37xzXXXBObN29uxZq3P7vSFscdd1xxTsPw2cqVK4shSjf1bX0tdf0u+yM2WtK6deuKPwzpD8XW0v6KFSuaPSfdzbq541M5rdsW27rkkkuKseJt/0enddrjqaeeirvvvjuWL1/eSrXMw660RbrY/va3v42zzjqruOi+9NJL8Y1vfKP4h0J65ACt1xZnnnlmcd5nPvOZNKIS77//fpx//vlx6aWXtlKt+W/X77q6unjnnXeKOVw7ol31CNF+XHvttcUE3QcffLCYwEjr2rBhQ4wZM6aYwN69e/dyVyd76WHUqWcuPVMxPah69OjRMWXKlJg1a1a5q5adNDk39cbdeuutsWzZsnjggQdi7ty5cdVVV5W7auyidtUjlP5gd+zYMdasWdOkPO336tWr2XNS+c4cz+5riwY33nhjEYQef/zxOOqoo3ZzTfOws+3x8ssvF8/ySys4tr4YJ506dYoXX3wxDjnkkFaoefuzK78baaXYHnvsUZzX4FOf+lTxL+I0vNO5c+fdXu/2aFfa4vLLLy/+kXDOOecU+2mlcXpQ+HnnnVeE0zS0RuvY3vW7urp6h3uDknbVYumPQfrX0oIFC5r88U77aXy9Oal86+OTxx57bLvHs/vaIkkP0E3/spo/f34MHjy4lWrb/u1se6TbSTz33HPFsFjDdtppp8VJJ51UvE5Lhmm9343jjz++GA5rCKPJX//61yIgCUGt2xZp7uK2YachoHp0Z+tqset3qR0uhUxLG++9995iOd15551XLIWsra0tPj9mzJjSpEmTmiyf79SpU+nGG28slmxPmzbN8vkytcW1115bLGO9//77S2+88UbjtmHDhjJ+F/m2x7asGitfW6xatapYQfnNb36z9OKLL5Z+85vflHr06FH64Q9/WMbvIs+2SNeI1Ba/+tWviuXbjz76aOmQQw4pViDzf5P+1qfbp6QtxZObb765eP3aa68Vn0/tkNpj2+Xz3/ve94rrd7r9iuXz/1+6l8CBBx5YXFTT0sinn3668XMnnHBC8Qd9a/fdd1/psMMOK45PS/Hmzp1bhlq3TzvTFgcddFDxP/+2W/rDQ3l+N7YmCJW3LRYtWlTc2iNdtNNS+quvvrq4vQGt2xbvvfde6Qc/+EERfrp27Vrq06dP6Rvf+Ebp3//+d5lq33488cQTzV4DGn7+6WNqj23PGThwYNF26ffiJz/5yU6/b1X6T8t2VgEAtA3tao4QAMDOEIQAgGwJQgBAtgQhACBbghAAkC1BCADIliAEAGRLEAIAsiUIAQDZEoQAgGwJQgBA5Or/AdluW1UJM9yaAAAAAElFTkSuQmCC",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.ylabel(\"sales\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "4d3278ee",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'sales vs index')"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.title(\"sales vs index\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "5049ef65",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x27f0f453ed0>]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(df['sales'],marker='o',color='#FF0000',markerfacecolor='w',markeredgecolor='green')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "a036b9e0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>A</th>\n",
       "      <th>B</th>\n",
       "      <th>C</th>\n",
       "      <th>D</th>\n",
       "      <th>E</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>9</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>9</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6</td>\n",
       "      <td>8</td>\n",
       "      <td>9</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>7</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   A  B  C  D  E\n",
       "0  3  8  5  2  9\n",
       "1  1  9  3  5  9\n",
       "2  4  2  4  9  4\n",
       "3  3  9  4  4  1\n",
       "4  2  3  7  6  5\n",
       "5  6  8  9  4  5\n",
       "6  1  7  7  6  4\n",
       "7  7  9  9  1  6\n",
       "8  4  6  2  1  7\n",
       "9  1  5  9  0  9"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df=pd.DataFrame(np.random.randint(0,10,(10,5)),columns=\"A B C D E\".split())\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "9dedcc64",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x27f0f81aad0>]"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.subplot(4,4,1)\n",
    "plt.plot(df['A'],color='r')\n",
    "plt.subplot(4,4,2)\n",
    "plt.plot(df['B'],color='b')\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d3e6bbc9",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "71416559",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "78bacfaf",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5d27ac15",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6cedd143",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "44f0e3e5",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "410779e0",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fd173944",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4b4725cf",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e72b7b17",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "593eccf8",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b447fe07",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d9aa681a",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4e8ef5ef",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0b0fca31",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e3a03e6e",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f3d53eef",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0eb91f8b",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9f879bd2",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7c77d7a7",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9d52f1f0",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "985dc06e",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9297dc16",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ea502486",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0e4cda95",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3ab8d36e",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bc214973",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ad175af2",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6c575bb0",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bc635dda",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "578cc191",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6452ffc0",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "102b109f",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ec59e249",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "55479c94",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a909a6ec",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fefd8c4d",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d0116d8e",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f83271af",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "16815f12",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "32050354",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "053ec472",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b8b9647e",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5ff98926",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b59ce34d",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "762e10ab",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1c50e0e8",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "da576245",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d81c8a49",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4403cb35",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "43507353",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c2f15ccd",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "88588abb",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b52ecca9",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "149a5bf5",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c7edec76",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6a268e8a",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6bd311e2",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "41521fb4",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9e948dac",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ea8d3d59",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d911d05a",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d9b171f9",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a0d1100e",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1d39e50d",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ee5ad29f",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9802ca31",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d6725659",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0e3ab738",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "51657ee0",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7630ca31",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "67e9faa6",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1fcf26fa",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f57c7855",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3f4b343d",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ec1ed475",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6d067f0e",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "efb1937b",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "629b4244",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e95fb07a",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "68b0581c",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "285f9be1",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cdc5e1ee",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "84f50403",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1538dbcd",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fe107808",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "082805ae",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "73a80792",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b9d8a9a3",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8045712b",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1ef0049f",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "efd17d08",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ba461472",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5844acea",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e62cf63b",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "527e5938",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "91ad7a49",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "dfdfa5d9",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "39be15a0",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "270929d9",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bfd2ce89",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5b80c884",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b62828ba",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": ".venv",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
