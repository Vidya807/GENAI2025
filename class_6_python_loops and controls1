{
  "cells": [
    {
      "cell_type": "code",
      "source": [
        "x = 10\n",
        "if x > 5:\n",
        "    print(\"Greater than 5\")"
      ],
      "metadata": {
        "id": "SAn7uXDu8cB_",
        "outputId": "dde5ce07-1074-46b5-c4b1-bff9b437f11c",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Greater than 5\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x=3\n",
        "if x > 5:\n",
        "    print(\"Greater\")\n",
        "else:\n",
        "    print(\"Not greater\")"
      ],
      "metadata": {
        "id": "9I4mxB7F8b-X",
        "outputId": "b62b69c1-f727-46ea-b539-1b09d7c1a304",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Not greater\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "score=85\n",
        "if score > 90:\n",
        "    print(\"A\")\n",
        "elif score > 80:\n",
        "    print(\"B\")\n",
        "else:\n",
        "    print(\"C\")\n"
      ],
      "metadata": {
        "id": "Jfm2tbOr8b7g",
        "outputId": "a8b2f68d-456d-4f85-892c-38663227b8b2",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "B\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 4\n",
        "name = \"Alice\"\n",
        "if name == \"Alice\":\n",
        "    print(\"Welcome Alice\")"
      ],
      "metadata": {
        "id": "aP8OfK7w8b4q",
        "outputId": "71f72c0d-80a2-4f68-8686-6506175e80ab",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Welcome Alice\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 5\n",
        "age = 18\n",
        "if age >= 18:\n",
        "    print(\"Adult\")\n",
        "else:\n",
        "    print(\"Minor\")"
      ],
      "metadata": {
        "id": "gUfK49zg8b1u",
        "outputId": "6aad126c-a85e-4b28-f3ab-dddf2cd9a212",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Adult\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 6\n",
        "num = 0\n",
        "if num == 0:\n",
        "    print(\"Zero\")\n",
        "else:\n",
        "    print(\"Non-zero\")"
      ],
      "metadata": {
        "id": "iTrQ1kYj8bzL",
        "outputId": "fd5efefa-4505-4d10-dbef-4a05b700b368",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Zero\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 7\n",
        "n = -5\n",
        "if n < 0:\n",
        "    print(\"Negative\")\n",
        "elif n == 0:\n",
        "    print(\"Zero\")\n",
        "else:\n",
        "    print(\"Positive\")"
      ],
      "metadata": {
        "id": "8v2Q6eh18bwS",
        "outputId": "049f6f77-3a53-4569-fa29-f5a74aa16156",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Negative\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 8\n",
        "temp = 30\n",
        "if temp > 25:\n",
        "    print(\"Hot\")\n",
        "else:\n",
        "    print(\"Cool\")"
      ],
      "metadata": {
        "id": "IFrhhBtM8btS",
        "outputId": "77bb23bc-38e1-47f7-ebde-594baabccb19",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Hot\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 9\n",
        "language = \"Python\"\n",
        "if language == \"Python\":\n",
        "    print(\"Language matched\")"
      ],
      "metadata": {
        "id": "104Sr0EX8bqu",
        "outputId": "333cfbb9-e067-4f36-bbc0-b915cbf5a8d1",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Language matched\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 10\n",
        "marks = 65\n",
        "if marks >= 90:\n",
        "    print(\"Excellent\")\n",
        "elif marks >= 75:\n",
        "    print(\"Very Good\")\n",
        "elif marks >= 50:\n",
        "    print(\"Good\")\n",
        "else:\n",
        "    print(\"Fail\")"
      ],
      "metadata": {
        "id": "UvuddygY8bn0",
        "outputId": "362d2f8b-2ab6-4054-b749-9624bcff4270",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Good\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 11\n",
        "flag = True\n",
        "if flag:\n",
        "    print(\"Flag is True\")"
      ],
      "metadata": {
        "id": "_PMlLL2P8blC",
        "outputId": "b1f88346-fc61-414a-e961-77aad7e3181f",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Flag is True\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 12\n",
        "a, b = 10, 20\n",
        "if a < b:\n",
        "    print(\"a is less than b\")"
      ],
      "metadata": {
        "id": "XpjjVST-8biR",
        "outputId": "96f67f4b-16e2-4f00-f326-90814f6068cf",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "a is less than b\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 13\n",
        "x = 100\n",
        "if x % 2 == 0:\n",
        "    print(\"Even\")\n",
        "else:\n",
        "    print(\"Odd\")"
      ],
      "metadata": {
        "id": "LxfFQ73p8bfi",
        "outputId": "5315a373-d049-4590-c468-05b9fab50c33",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Even\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "# Example 14\n",
        "grade = 'A'\n",
        "if grade == 'A':\n",
        "    print(\"Excellent\")\n",
        "elif grade == 'B':\n",
        "    print(\"Good\")\n",
        "else:\n",
        "    print(\"Average\")"
      ],
      "metadata": {
        "id": "ys9HhbBp8bcx",
        "outputId": "0f9aaaff-5fc6-4251-cabf-986a6cc6ab48",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Excellent\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 15\n",
        "price = 120\n",
        "if price > 100:\n",
        "    print(\"Too expensive\")"
      ],
      "metadata": {
        "id": "_g8zgMtS8baE",
        "outputId": "77493c51-9ba2-435a-ffba-665ec93d998b",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Too expensive\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 16\n",
        "rain = False\n",
        "if rain:\n",
        "    print(\"Take umbrella\")\n",
        "else:\n",
        "    print(\"No need\")"
      ],
      "metadata": {
        "id": "JnC5CUVr8bXR",
        "outputId": "bc69fa12-a6e6-4d05-d203-43b75645bfc8",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "No need\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 17\n",
        "fruit = \"apple\"\n",
        "if fruit in [\"apple\", \"banana\", \"mango\"]:\n",
        "    print(\"Available\")"
      ],
      "metadata": {
        "id": "M5QWDWyH-GY5",
        "outputId": "0456e02b-e6ec-43ad-81e5-4eec92c2c97e",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Available\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 18\n",
        "x = 25\n",
        "if x > 10 and x < 50:\n",
        "    print(\"In range\")"
      ],
      "metadata": {
        "id": "CMb2jnyd-JHw",
        "outputId": "f01c8b5e-d964-45c5-caaf-d05fe74e70bc",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "In range\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "# Example 19\n",
        "balance = 500\n",
        "withdraw = 600\n",
        "if balance >= withdraw:\n",
        "    print(\"Withdraw successful\")\n",
        "else:\n",
        "    print(\"Insufficient balance\")\n"
      ],
      "metadata": {
        "id": "81oCaRrt-Lt4",
        "outputId": "6ddf6050-9737-4738-d22a-4dfae0b795d5",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Insufficient balance\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 20\n",
        "char = 'z'\n",
        "if char.isalpha():\n",
        "    print(\"Alphabet\")"
      ],
      "metadata": {
        "id": "0Zg2724U-TcL",
        "outputId": "62ed4141-841d-4d5f-eaed-025707a14268",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Alphabet\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 21\n",
        "password = \"admin123\"\n",
        "if len(password) >= 8:\n",
        "    print(\"Valid Password\")"
      ],
      "metadata": {
        "id": "jF5Z819K-TYs",
        "outputId": "4de1a148-7b93-433a-a08b-a9e47ee8b5b3",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Valid Password\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 22\n",
        "x = 0\n",
        "if not x:\n",
        "    print(\"x is zero\")"
      ],
      "metadata": {
        "id": "cpMlW5xj-TWY",
        "outputId": "7cc83906-7123-42a2-ff92-fba2be08ba91",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "x is zero\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 23\n",
        "user = \"admin\"\n",
        "if user == \"admin\":\n",
        "    print(\"Access granted\")"
      ],
      "metadata": {
        "id": "N4fhabf9-TTn",
        "outputId": "1f66a9fd-8c15-4dd4-edb0-85c5b10d2fd6",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Access granted\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 24\n",
        "x = 15\n",
        "if x % 5 == 0:\n",
        "    print(\"Divisible by 5\")"
      ],
      "metadata": {
        "id": "LsRFmTNB-TRA",
        "outputId": "280ec203-78fd-430c-fa31-7850033d0ab7",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Divisible by 5\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "# Example 25\n",
        "s = \"OpenAI\"\n",
        "if s.startswith(\"O\"):\n",
        "    print(\"Starts with O\")"
      ],
      "metadata": {
        "id": "RXPnRute-TOV",
        "outputId": "0da64a5e-20c6-4d7b-b064-7f7694dad123",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Starts with O\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 26\n",
        "grade = 60\n",
        "if grade >= 50:\n",
        "    print(\"Pass\")\n",
        "else:\n",
        "    print(\"Fail\")"
      ],
      "metadata": {
        "id": "rWh_7QhW-TL7",
        "outputId": "3fbbf678-88c2-475e-b10b-2456876e1713",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Pass\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 27\n",
        "time = 14\n",
        "if time < 12:\n",
        "    print(\"Morning\")\n",
        "elif time < 18:\n",
        "    print(\"Afternoon\")\n",
        "else:\n",
        "    print(\"Evening\")"
      ],
      "metadata": {
        "id": "5O2us62B-TJb",
        "outputId": "261543df-137a-4162-d289-cafcd31e7459",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Afternoon\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 28\n",
        "temp = 0\n",
        "if temp <= 0:\n",
        "    print(\"Freezing\")"
      ],
      "metadata": {
        "id": "uy4e-eQ1-TGy",
        "outputId": "07a0396d-faa8-4abf-d642-de766f6739d3",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Freezing\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 29\n",
        "value = 10\n",
        "if value:\n",
        "    print(\"Truthy value\")"
      ],
      "metadata": {
        "id": "AF8PxZBU-TEG",
        "outputId": "f0becf1d-54f6-4b30-873a-baaffd1f7514",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Truthy value\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 30\n",
        "n = 21\n",
        "if n % 7 == 0:\n",
        "    print(\"Divisible by 7\")\n"
      ],
      "metadata": {
        "id": "SUmUVDF1-TBL",
        "outputId": "f414e253-b929-4da0-d033-fbc84bb97164",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Divisible by 7\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 31\n",
        "status = \"Success\"\n",
        "if status == \"Success\":\n",
        "    print(\"Operation successful\")"
      ],
      "metadata": {
        "id": "iiu0uV_l-S-m",
        "outputId": "e8a174b5-28af-4879-be51-4ea43ebef2fe",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Operation successful\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 32\n",
        "gender = \"female\"\n",
        "if gender.lower() == \"female\":\n",
        "    print(\"Hello Madam\")"
      ],
      "metadata": {
        "id": "TD_3TvLF-8eJ",
        "outputId": "d5de3c8e-ba55-464a-cc60-afb27e93ab7d",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Hello Madam\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 33\n",
        "year = 2024\n",
        "if (year % 4 == 0 and year % 100 != 0) or (year % 400 == 0):\n",
        "    print(\"Leap year\")"
      ],
      "metadata": {
        "id": "IRBmiXBU-8al",
        "outputId": "6c3696a6-9740-480f-ec44-f88e2a02b86e",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Leap year\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 34\n",
        "age = 5\n",
        "if age < 13:\n",
        "    print(\"Child\")\n",
        "elif age < 20:\n",
        "    print(\"Teen\")\n",
        "else:\n",
        "    print(\"Adult\")"
      ],
      "metadata": {
        "id": "KQNLTln6-_Pr",
        "outputId": "54114f8a-fe41-485a-f303-2c65f4a3eca1",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Child\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 35\n",
        "speed = 80\n",
        "if speed > 60:\n",
        "    print(\"Over speed\")"
      ],
      "metadata": {
        "id": "yl97QC1Z-_MP",
        "outputId": "527f3f01-8edc-4c61-c298-7828a15c1851",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Over speed\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 35\n",
        "speed = 80\n",
        "if speed > 60:\n",
        "    print(\"Over speed\")"
      ],
      "metadata": {
        "id": "tWzCIKPN-_Jq"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 36\n",
        "income = 45000\n",
        "if income < 50000:\n",
        "    print(\"Low income\")\n",
        "else:\n",
        "    print(\"Good income\")\n"
      ],
      "metadata": {
        "id": "1hBRH4ne-_Gy",
        "outputId": "dac5b55d-108a-45bc-e466-2ff759a4a24d",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Low income\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 37\n",
        "height = 180\n",
        "if height > 170:\n",
        "    print(\"Tall\")"
      ],
      "metadata": {
        "id": "-w2vb35h-_Dp",
        "outputId": "1d7e0f22-936b-468c-d08e-394a0c664ced",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Tall\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 38\n",
        "weight = 70\n",
        "if weight < 60:\n",
        "    print(\"Underweight\")\n",
        "elif weight <= 80:\n",
        "    print(\"Normal\")\n",
        "else:\n",
        "    print(\"Overweight\")"
      ],
      "metadata": {
        "id": "aSgEZJhA-_Ao",
        "outputId": "2fe3d765-70d9-4106-c62e-4481698e4779",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Normal\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 39\n",
        "letter = 'a'\n",
        "if letter in 'aeiou':\n",
        "    print(\"Vowel\")\n",
        "else:\n",
        "    print(\"Consonant\")"
      ],
      "metadata": {
        "id": "vn4npZ5N--9m",
        "outputId": "a7d67992-2413-46bc-96ec-81b3966575ff",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Vowel\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 40\n",
        "x = 10\n",
        "if x != 0:\n",
        "    print(\"Not zero\")"
      ],
      "metadata": {
        "id": "r2fCSnD5--6r",
        "outputId": "d88dc849-6167-4fa3-8a32-70df46d5f83b",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Not zero\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 41\n",
        "count = 0\n",
        "if count == 0:\n",
        "    print(\"Empty\")"
      ],
      "metadata": {
        "id": "q7xWomMp--30",
        "outputId": "00a9e61b-0f1b-405d-d2a9-af3c682eb107",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Empty\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 42\n",
        "role = \"manager\"\n",
        "if role == \"admin\":\n",
        "    print(\"Admin access\")\n",
        "elif role == \"manager\":\n",
        "    print(\"Manager access\")\n",
        "else:\n",
        "    print(\"Guest access\")"
      ],
      "metadata": {
        "id": "IBrbhtQ5--0-",
        "outputId": "b1fab51e-d2d2-4022-dd03-d16a66c63c3b",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Manager access\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 43\n",
        "day = \"Sunday\"\n",
        "if day == \"Sunday\":\n",
        "    print(\"Holiday\")"
      ],
      "metadata": {
        "id": "yC4nSMqn--x_",
        "outputId": "b1cd314e-4ca4-45c6-81f1-4c433b1faf3b",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Holiday\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 44\n",
        "email = \"user@example.com\"\n",
        "if \"@\" in email:\n",
        "    print(\"Valid email\")\n"
      ],
      "metadata": {
        "id": "vwBnnTqQ--u8",
        "outputId": "f22711ca-ee1d-4dea-9e56-ec5bd2881963",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Valid email\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 45\n",
        "x = 9\n",
        "if x in [1, 3, 5, 7, 9]:\n",
        "    print(\"Odd single-digit\")"
      ],
      "metadata": {
        "id": "2qfHRlPJ--r1",
        "outputId": "20ed1886-2336-4bbe-d4b2-c6afcc8718f6",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Odd single-digit\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "# Example 46\n",
        "celsius = 37\n",
        "if celsius >= 37:\n",
        "    print(\"Fever\")"
      ],
      "metadata": {
        "id": "Ksd4mDY2--pL",
        "outputId": "0cf2ed08-b111-45db-e350-f9982effd052",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Fever\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 47\n",
        "n = 50\n",
        "if n > 100:\n",
        "    print(\"Huge\")\n",
        "else:\n",
        "    print(\"Moderate or Small\")\n"
      ],
      "metadata": {
        "id": "wJEFgp4z--mh",
        "outputId": "71bf4f5d-ca2a-4995-a011-852043afee2b",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Moderate or Small\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 48\n",
        "x, y = 8, 9\n",
        "if x == y:\n",
        "    print(\"Equal\")\n",
        "else:\n",
        "    print(\"Not equal\")"
      ],
      "metadata": {
        "id": "GMH1mx85--j5",
        "outputId": "ac57f9e6-77fe-4c55-a9d5-a273a3c6326c",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Not equal\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 49\n",
        "score = 55\n",
        "if score >= 90:\n",
        "    print(\"A\")\n",
        "elif score >= 75:\n",
        "    print(\"B\")\n",
        "elif score >= 60:\n",
        "    print(\"C\")\n",
        "elif score >= 50:\n",
        "    print(\"D\")\n",
        "else:\n",
        "    print(\"F\")"
      ],
      "metadata": {
        "id": "li_SMcKc--hN",
        "outputId": "691198cb-6d11-49ec-e1a6-cd91587740fb",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "D\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example 50\n",
        "logged_in = True\n",
        "if logged_in:\n",
        "    print(\"Dashboard\")\n",
        "else:\n",
        "    print(\"Login first\")"
      ],
      "metadata": {
        "id": "xCSjEXwe--eT",
        "outputId": "62a95bef-f64c-43ba-a60a-f5e71a75a11f",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Dashboard\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "TfAOHYRV--bd"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "gBiJBsAk--Ym"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "QuPlIOVr--Vm"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "ldTREj5A--Se"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "J5L3TQ58--Ps"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "xzjlGvl7--M6"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "Wj0GXr2T--KO"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "WLXLaclf--HM"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "HtJD83IJ--Ei"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "MJCFxZ66--Bw"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "ttTg0sjv-9-5"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "hPxIrr-a-975"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "1yZBy6BD-94_"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "sdTcr-rG-92O"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "UAoXmr0w-9zh"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "KuNlQ6Zq-9wn"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "DHfIItFk-9t0"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "7J8mtyBs-9q5"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "GBAadRr_-9oH"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "7DXJtw25-9lN"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "GI6xG8Eh-9io"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "0JuduK9h-9f9"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "jG1-980N-9dL"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "uhnEtiva-9am"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "55LFLhOI-8Xz"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "youiFy-u-8VM"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "_rbZbtXC-8SU"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "E9srTAD9-8Pv"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "fnvYWavR-8NF"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "PqxM0GcU-8KZ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "F-7Bd8uB-8H7"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "_Kp4TgiP-8FJ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "tkuIgq6m-8CP"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "Pi7iuTAK-7_X"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "Va7hqOqc-78c"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "a5Zd7qwJ-75_"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "R2fjxTBg-73M"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "yf6RozWY-70t"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "yVY8LI4h-7yE"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "tPkk0jty-7vV"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "oGdH5ElQ-7sm"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "Dbfiz1EA-7p4"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "fTN9YVbg-7nG"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "j6A_cDNS-7ku"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "gRZNz7v3-7iM"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "2v6vYfhp-7fs"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "T0ur8tmf-7dX"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "MBIMsT4D-7ay"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "VR6mdf-a-7Yc"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "HcOfFxAI-7WA"
      },
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "colab": {
      "toc_visible": true,
      "provenance": []
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}
